# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, csunny
# This file is distributed under the same license as the DB-GPT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DB-GPT 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-02 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../modules/knowledge.md:1 436b94d3a8374ed18feb5c14893a84e6
msgid "Knowledge"
msgstr "知识"

#: ../../modules/knowledge.md:3 918a3747cbed42d18b8c9c4547e67b14
#, fuzzy
msgid ""
"As the knowledge base is currently the most significant user demand "
"scenario, we natively support the construction and processing of "
"knowledge bases. At the same time, we also provide multiple knowledge "
"base management strategies in this project, such as:"
msgstr ""
"由于知识库是当前用户需求最显著的场景，我们原生支持知识库的构建和处理。同时，我们还在本项目中提供了多种知识库管理策略，如:pdf,md , "
"txt, word, ppt"

#: ../../modules/knowledge.md:4 d4d4b5d57918485aafa457bb9fdcf626
msgid "Default built-in knowledge base"
msgstr ""

#: ../../modules/knowledge.md:5 d4d4b5d57918485aafa457bb9fdcf626
msgid "Custom addition of knowledge bases"
msgstr ""

#: ../../modules/knowledge.md:6 984361ce835c4c3492e29e1fb897348a
msgid ""
"Various usage scenarios such as constructing knowledge bases through "
"plugin capabilities and web crawling. Users only need to organize the "
"knowledge documents, and they can use our existing capabilities to build "
"the knowledge base required for the large model."
msgstr ""

#: ../../modules/knowledge.md:9 746e4fbd3212460198be51b90caee2c8
#, fuzzy
msgid "Create your own knowledge repository"
msgstr "创建你自己的知识库"

#: ../../modules/knowledge.md:11 1c46b33b0532417c824efbaa3e687c3f
msgid ""
"1.Place personal knowledge files or folders in the pilot/datasets "
"directory."
msgstr ""

#: ../../modules/knowledge.md:13 3b16f387b5354947a89d6df77bd65bdb
#, fuzzy
msgid ""
"We currently support many document formats: txt, pdf, md, html, doc, ppt,"
" and url."
msgstr "当前支持txt, pdf, md, html, doc, ppt, url文档格式"

#: ../../modules/knowledge.md:15 09ec337d7da4418db854e58afb6c0980
msgid "before execution:"
msgstr "开始前"

#: ../../modules/knowledge.md:22 c09b3decb018485f8e56830ddc156194
msgid ""
"2.Update your .env, set your vector store type, VECTOR_STORE_TYPE=Chroma "
"(now only support Chroma and Milvus, if you set Milvus, please set "
"MILVUS_URL and MILVUS_PORT)"
msgstr ""

#: ../../modules/knowledge.md:25 74460ec7709441d5945ce9f745a26d20
msgid "2.Run the knowledge repository initialization command"
msgstr ""

#: ../../modules/knowledge.md:31 4498ec4e46ff4e24b45dd855e829bd32
msgid ""
"Optionally, you can run `dbgpt knowledge load --help` command to see more"
" usage."
msgstr ""

#: ../../modules/knowledge.md:33 5048ac3289e540f2a2b5fd0e5ed043f5
msgid ""
"3.Add the knowledge repository in the interface by entering the name of "
"your knowledge repository (if not specified, enter \"default\") so you "
"can use it for Q&A based on your knowledge base."
msgstr ""

#: ../../modules/knowledge.md:35 deeccff20f7f453dad0881b63dae2a18
msgid ""
"Note that the default vector model used is text2vec-large-chinese (which "
"is a large model, so if your personal computer configuration is not "
"enough, it is recommended to use text2vec-base-chinese). Therefore, "
"ensure that you download the model and place it in the models directory."
msgstr ""
"注意，这里默认向量模型是text2vec-large-chinese(模型比较大，如果个人电脑配置不够建议采用text2vec-base-"
"chinese),因此确保需要将模型download下来放到models目录中。"

#~ msgid "before execution:  python -m spacy download zh_core_web_sm"
#~ msgstr "在执行之前请先执行python -m spacy download zh_core_web_sm"

#~ msgid "2.Run the knowledge repository script in the tools directory."
#~ msgstr "3.在tools目录执行知识入库脚本"

#~ msgid ""
#~ "python tools/knowledge_init.py note : "
#~ "--vector_name : your vector store name"
#~ "  default_value:default"
#~ msgstr ""

#~ msgid ""
#~ "3.Add the knowledge repository in the"
#~ " interface by entering the name of"
#~ " your knowledge repository (if not "
#~ "specified, enter \"default\") so you can"
#~ " use it for Q&A based on your"
#~ " knowledge base."
#~ msgstr "如果选择新增知识库，在界面上新增知识库输入你的知识库名"

#~ msgid ""
#~ "1.Place personal knowledge files or "
#~ "folders in the pilot/datasets directory."
#~ msgstr "1.将个人知识文件或文件夹放在pilot/datasets目录中。"

#~ msgid ""
#~ "2.Update your .env, set your vector "
#~ "store type, VECTOR_STORE_TYPE=Chroma (now only"
#~ " support Chroma and Milvus, if you"
#~ " set Milvus, please set MILVUS_URL "
#~ "and MILVUS_PORT)"
#~ msgstr "2.更新你的.env，设置你的向量存储类型，VECTOR_STORE_TYPE=Chroma(现在只支持Chroma和Milvus，如果你设置了Milvus，请设置MILVUS_URL和MILVUS_PORT)"

#~ msgid ""
#~ "We currently support many document "
#~ "formats: raw text, txt, pdf, md, "
#~ "html, doc, ppt, and url. In the"
#~ " future, we will continue to support"
#~ " more types of knowledge, including "
#~ "audio, video, various databases, and big"
#~ " data sources. Of course, we look "
#~ "forward to your active participation in"
#~ " contributing code."
#~ msgstr ""

#~ msgid "1.prepare"
#~ msgstr "准备"

#~ msgid ""
#~ "2.prepare embedding model, you can "
#~ "download from https://huggingface.co/. Notice "
#~ "you have installed git-lfs."
#~ msgstr ""
#~ "提前准备Embedding Model, 你可以在https://huggingface.co/进行下载，注意"
#~ "：你需要先安装git-lfs.eg: git clone "
#~ "https://huggingface.co/THUDM/chatglm2-6b"

#~ msgid ""
#~ "eg: git clone https://huggingface.co/sentence-"
#~ "transformers/all-MiniLM-L6-v2"
#~ msgstr ""
#~ "eg: git clone https://huggingface.co/sentence-"
#~ "transformers/all-MiniLM-L6-v2"

#~ msgid ""
#~ "3.prepare vector_store instance and vector "
#~ "store config, now we support Chroma, "
#~ "Milvus and Weaviate."
#~ msgstr "提前准备向量数据库环境，目前支持Chroma, Milvus and Weaviate向量数据库"

#~ msgid ""
#~ "3.init Url Type EmbeddingEngine api and"
#~ " embedding your document into vector "
#~ "store in your code."
#~ msgstr "初始化 Url类型 EmbeddingEngine api， 将url文档embedding向量化到向量数据库 "

#~ msgid "If you want to add your source_reader or text_splitter, do this:"
#~ msgstr "如果你想手动添加你自定义的source_reader和text_splitter, 请参考:"

#~ msgid ""
#~ "4.init Document Type EmbeddingEngine api "
#~ "and embedding your document into vector"
#~ " store in your code. Document type"
#~ " can be .txt, .pdf, .md, .doc, "
#~ ".ppt."
#~ msgstr ""
#~ "初始化 文档型类型 EmbeddingEngine api， "
#~ "将文档embedding向量化到向量数据库(文档可以是.txt, .pdf, .md, .html,"
#~ " .doc, .ppt)"

#~ msgid ""
#~ "5.init TEXT Type EmbeddingEngine api and"
#~ " embedding your document into vector "
#~ "store in your code."
#~ msgstr "初始化TEXT类型 EmbeddingEngine api， 将文档embedding向量化到向量数据库"

#~ msgid "4.similar search based on your knowledge base. ::"
#~ msgstr "在知识库进行相似性搜索"

#~ msgid ""
#~ "`pdf_embedding <./knowledge/pdf/pdf_embedding.html>`_: "
#~ "supported pdf embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

#~ msgid ""
#~ "`markdown_embedding "
#~ "<./knowledge/markdown/markdown_embedding.html>`_: supported "
#~ "markdown embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

#~ msgid ""
#~ "`word_embedding <./knowledge/word/word_embedding.html>`_: "
#~ "supported word embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

#~ msgid ""
#~ "`url_embedding <./knowledge/url/url_embedding.html>`_: "
#~ "supported url embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

#~ msgid ""
#~ "`ppt_embedding <./knowledge/ppt/ppt_embedding.html>`_: "
#~ "supported ppt embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

#~ msgid ""
#~ "`string_embedding <./knowledge/string/string_embedding.html>`_:"
#~ " supported raw text embedding."
#~ msgstr ""
#~ "pdf_embedding <./knowledge/pdf_embedding.html>`_: "
#~ "supported pdf embedding."

